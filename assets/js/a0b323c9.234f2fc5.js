(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[6060],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?i.createElement(g,a(a({ref:n},c),{},{components:t})):i.createElement(g,a({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},561:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var i=t(2122),o=t(9756),r=(t(7294),t(3905)),a={id:"nimbus-cli-working-with-logs",title:"Working with Logs",slug:"/nimbus-cli/working-with-logs"},l=void 0,s={unversionedId:"deep-dives/mobile/nimbus-cli/nimbus-cli-working-with-logs",id:"deep-dives/mobile/nimbus-cli/nimbus-cli-working-with-logs",isDocsHomePage:!1,title:"Working with Logs",description:"Log files are especially helpful to developers, but not always very easy to access.",source:"@site/docs/deep-dives/mobile/nimbus-cli/60-working-with-logs.mdx",sourceDirName:"deep-dives/mobile/nimbus-cli",slug:"/nimbus-cli/working-with-logs",permalink:"/nimbus-cli/working-with-logs",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/mobile/nimbus-cli/60-working-with-logs.mdx",tags:[],version:"current",sidebarPosition:60,frontMatter:{id:"nimbus-cli-working-with-logs",title:"Working with Logs",slug:"/nimbus-cli/working-with-logs"},sidebar:"sidebar",previous:{title:"Working with Files",permalink:"/nimbus-cli/working-with-files"},next:{title:"Working with Feature Manifests",permalink:"/nimbus-cli/fml"}},p=[{value:"<code>capture-logs</code>",id:"capture-logs",children:[]},{value:"<code>tail-logs</code>",id:"tail-logs",children:[]},{value:"<code>log-state</code>",id:"log-state",children:[]}],c={toc:p};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Log files are especially helpful to developers, but not always very easy to access."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," uses ",(0,r.kt)("inlineCode",{parentName:"p"},"adb logcat")," on Android, and on iOS it uses the Unix commands ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tail"),"."),(0,r.kt)("p",null,"These logs are useful when examining the internal state of the app, or attaching to bug reports."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"For iOS the logs that are displayed and captured are the app's logs.\nFor Android, the logs are for the whole device.\nFor Android devices also used for personal usage, you should probably not upload such logs anywhere."))),(0,r.kt)("h2",{id:"capture-logs"},(0,r.kt)("inlineCode",{parentName:"h2"},"capture-logs")),(0,r.kt)("p",null,"Capturing a device log"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app firefox_ios --channel developer \\\n    capture-logs logs.txt\n")),(0,r.kt)("h2",{id:"tail-logs"},(0,r.kt)("inlineCode",{parentName:"h2"},"tail-logs")),(0,r.kt)("p",null,"You can set up a different terminal window to watch the logs as they are generated."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app firefox_ios --channel developer tail-logs\n")),(0,r.kt)("p",null,"If you know of any keywords you may be interested in, you can filter piping the output to the ",(0,r.kt)("inlineCode",{parentName:"p"},"grep")," command."),(0,r.kt)("p",null,"For example, the following outputs any log entry containing the word ",(0,r.kt)("inlineCode",{parentName:"p"},"send-tab"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app firefox_ios --channel developer tail-logs | grep -i send-tab\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"On iOS, because the ",(0,r.kt)("inlineCode",{parentName:"p"},"reset-app")," command deletes the app contaner, the ",(0,r.kt)("inlineCode",{parentName:"p"},"tail-logs")," command is only available after the first run after a reset, and stops after a reset.")),(0,r.kt)("h2",{id:"log-state"},(0,r.kt)("inlineCode",{parentName:"h2"},"log-state")),(0,r.kt)("p",null,"This command is an analog for the experiments menu in the secret settings of Fenix and Firefox for iOS."),(0,r.kt)("p",null,"It relaunches the app, then asks the SDK to dump the state of the Nimbus SDK to the logs. For example:"),(0,r.kt)("p",null,"For example, this is a section of logs captured on an Android device shortly after ",(0,r.kt)("inlineCode",{parentName:"p"},"log-state"),", and an enrollment into the ",(0,r.kt)("inlineCode",{parentName:"p"},"viewpoint-rolling-week-2-expansion-android")," experiment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"06-05 12:12:47.177 12737 12737 D nimbus::nimbus_client: nimbus_18d_NimbusClient_dump_state_to_log\n06-05 12:12:47.177 12737 12737 I nimbus::nimbus_client: Slug                                                             | Features                      | Branch\n06-05 12:12:47.177 12737 12737 I nimbus::nimbus_client: viewpoint-rolling-week-2-expansion-android                       | messaging                     | treatment\n06-05 12:12:47.177 12737 12841 D nimbus::nimbus_client: nimbus_18d_NimbusClient_set_fetch_enabled\n")),(0,r.kt)("p",null,"It is useful to use in conjunction with other logging commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer log-state\nnimbus-cli --app fenix --channel developer tail-log | grep -i nimbus\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer log-state\nnimbus-cli --app fenix --channel developer capture-logs logs.txt\n")),(0,r.kt)("p",null,"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},"log-state")," is called at the same time as the ",(0,r.kt)("inlineCode",{parentName:"p"},"enroll")," command."))}u.isMDXComponent=!0}}]);