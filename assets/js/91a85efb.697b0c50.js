"use strict";(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[3373],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=i,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||l;return t?a.createElement(f,r(r({ref:n},m),{},{components:t})):a.createElement(f,r({ref:n},m))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4577:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const l={id:"fml-paths",title:"Using paths in FML",slug:"/fml-paths"},r="Paths and URLs",o={unversionedId:"deep-dives/specifications/fml/fml-paths",id:"deep-dives/specifications/fml/fml-paths",title:"Using paths in FML",description:"In several places paths to link one .fml.yaml file to another.",source:"@site/docs/deep-dives/specifications/fml/fml-paths.md",sourceDirName:"deep-dives/specifications/fml",slug:"/fml-paths",permalink:"/fml-paths",draft:!1,editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/specifications/fml/fml-paths.md",tags:[],version:"current",frontMatter:{id:"fml-paths",title:"Using paths in FML",slug:"/fml-paths"},sidebar:"sidebar",previous:{title:"Componentizing the Nimbus Feature Manifest",permalink:"/fml-imports-and-includes"},next:{title:"The Feature Manifest Language spec",permalink:"/fml-spec"}},p={},s=[{value:"Remapping <code>@</code> prefixes with <code>repo-file</code>s",id:"remapping--prefixes-with-repo-files",level:2},{value:"Multiple repo files",id:"multiple-repo-files",level:3}],m={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"paths-and-urls"},"Paths and URLs"),(0,i.kt)("p",null,"In several places paths to link one ",(0,i.kt)("inlineCode",{parentName:"p"},".fml.yaml")," file to another."),(0,i.kt)("p",null,"For convenience, we should use the conventions around URLs used in Carthage and npm package managers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a relative path must use ",(0,i.kt)("inlineCode",{parentName:"li"},"/")," as a separator"),(0,i.kt)("li",{parentName:"ul"},"a relative path may use ",(0,i.kt)("inlineCode",{parentName:"li"},"./")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"../")," in their prefixes"),(0,i.kt)("li",{parentName:"ul"},"an absolute URL may be used, but this must start with ",(0,i.kt)("inlineCode",{parentName:"li"},"https://")),(0,i.kt)("li",{parentName:"ul"},"a Github repository may be specified with a prefix of ",(0,i.kt)("inlineCode",{parentName:"li"},"@"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"@mozilla/nimbus-shared")," expands to ",(0,i.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/mozilla/nimbus-shared/main/"))))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Hint: The rules of the URL construction would be a good place to consider local development and branches.")),(0,i.kt)("p",null,"When invoked in conjunction with the ",(0,i.kt)("inlineCode",{parentName:"p"},"repo-file")," argument, these ",(0,i.kt)("inlineCode",{parentName:"p"},"@")," paths may be overriden:"),(0,i.kt)("h2",{id:"remapping--prefixes-with-repo-files"},"Remapping ",(0,i.kt)("inlineCode",{parentName:"h2"},"@")," prefixes with ",(0,i.kt)("inlineCode",{parentName:"h2"},"repo-file"),"s"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-fml generate --repo-file v102.0.json input.fml.yaml output-dir\n")),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"v102.0.json")," may look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mozilla-mobile/android-components": "releases/102.0",\n  "mozilla/application-services": "v93.1.0"\n}\n')),(0,i.kt)("p",null,"A path to ",(0,i.kt)("inlineCode",{parentName:"p"},"@mozilla-mobile/android-components/components/messaging/nimbus.fml.yaml")," would resolve to ",(0,i.kt)("inlineCode",{parentName:"p"},"https://raw.githubusercontent.com/mozilla-mobile/android-components/releases/102.0/components/messaging/nimbus.fml.yaml"),"."),(0,i.kt)("p",null,"Defining local paths are useful for working with multiple repos at a time. A ",(0,i.kt)("inlineCode",{parentName:"p"},"local-dependencies.json")," may look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mozilla-mobile/android-components": "../android-components",\n  "mozilla/application-services": "../application-services"\n}\n')),(0,i.kt)("p",null,"Defining local paths is also useful for imposing structure on a complicated filesystem. e.g. an ",(0,i.kt)("inlineCode",{parentName:"p"},"app-structure.json")," file may look like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "my/messaging": "./Messaging/nimbus-manifests",\n  "my/onboarding": "./Onboarding/nimbus-manifests"\n}\n')),(0,i.kt)("h3",{id:"multiple-repo-files"},"Multiple repo files"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-fml")," command line can accept multiple repo-files at a time, resolving ",(0,i.kt)("inlineCode",{parentName:"p"},"@")," links as it goes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-fml generate --repo-file ./app-structure.json --repo-file @mozilla-mobile/dependency-versions/v102.0.json --language swift ./input.fml.yaml output-dir\n")))}u.isMDXComponent=!0}}]);