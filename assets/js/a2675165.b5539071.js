(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[5903],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return d}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=a,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||r;return t?i.createElement(f,l(l({ref:n},m),{},{components:t})):i.createElement(f,l({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5443:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var i=t(2122),a=t(9756),r=(t(7294),t(3905)),l={id:"fml-paths",title:"Using paths in FML",slug:"/fml-paths"},o="Paths and URLs",p={unversionedId:"deep-dives/specifications/fml-paths",id:"deep-dives/specifications/fml-paths",isDocsHomePage:!1,title:"Using paths in FML",description:"In several places paths to link one .fml.yaml file to another.",source:"@site/docs/deep-dives/specifications/fml-paths.md",sourceDirName:"deep-dives/specifications",slug:"/fml-paths",permalink:"/fml-paths",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/specifications/fml-paths.md",tags:[],version:"current",frontMatter:{id:"fml-paths",title:"Using paths in FML",slug:"/fml-paths"},sidebar:"sidebar",previous:{title:"Componentizing the Nimbus Feature Manifest",permalink:"/fml-imports-and-includes"},next:{title:"The Feature Manifest Language spec",permalink:"/fml-spec"}},s=[{value:"Remapping <code>@</code> prefixes with <code>repo-file</code>s",id:"remapping--prefixes-with-repo-files",children:[{value:"Multiple repo files",id:"multiple-repo-files",children:[]}]}],m={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"paths-and-urls"},"Paths and URLs"),(0,r.kt)("p",null,"In several places paths to link one ",(0,r.kt)("inlineCode",{parentName:"p"},".fml.yaml")," file to another."),(0,r.kt)("p",null,"For convenience, we should use the conventions around URLs used in Carthage and npm package managers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a relative path must use ",(0,r.kt)("inlineCode",{parentName:"li"},"/")," as a separator"),(0,r.kt)("li",{parentName:"ul"},"a relative path may use ",(0,r.kt)("inlineCode",{parentName:"li"},"./")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"../")," in their prefixes"),(0,r.kt)("li",{parentName:"ul"},"an absolute URL may be used, but this must start with ",(0,r.kt)("inlineCode",{parentName:"li"},"https://")),(0,r.kt)("li",{parentName:"ul"},"a Github repository may be specified with a prefix of ",(0,r.kt)("inlineCode",{parentName:"li"},"@"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"@mozilla/nimbus-shared")," expands to ",(0,r.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/mozilla/nimbus-shared/main/"))))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Hint: The rules of the URL construction would be a good place to consider local development and branches.")),(0,r.kt)("p",null,"When invoked in conjunction with the ",(0,r.kt)("inlineCode",{parentName:"p"},"repo-file")," argument, these ",(0,r.kt)("inlineCode",{parentName:"p"},"@")," paths may be overriden:"),(0,r.kt)("h2",{id:"remapping--prefixes-with-repo-files"},"Remapping ",(0,r.kt)("inlineCode",{parentName:"h2"},"@")," prefixes with ",(0,r.kt)("inlineCode",{parentName:"h2"},"repo-file"),"s"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-fml generate --repo-file v102.0.json input.fml.yaml output-dir\n")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"v102.0.json")," may look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mozilla-mobile/android-components": "releases/102.0",\n  "mozilla/application-services": "v93.1.0"\n}\n')),(0,r.kt)("p",null,"A path to ",(0,r.kt)("inlineCode",{parentName:"p"},"@mozilla-mobile/android-components/components/messaging/nimbus.fml.yaml")," would resolve to ",(0,r.kt)("inlineCode",{parentName:"p"},"https://raw.githubusercontent.com/mozilla-mobile/android-components/releases/102.0/components/messaging/nimbus.fml.yaml"),"."),(0,r.kt)("p",null,"Defining local paths are useful for working with multiple repos at a time. A ",(0,r.kt)("inlineCode",{parentName:"p"},"local-dependencies.json")," may look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mozilla-mobile/android-components": "../android-components",\n  "mozilla/application-services": "../application-services"\n}\n')),(0,r.kt)("p",null,"Defining local paths is also useful for imposing structure on a complicated filesystem. e.g. an ",(0,r.kt)("inlineCode",{parentName:"p"},"app-structure.json")," file may look like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "my/messaging": "./Messaging/nimbus-manifests",\n  "my/onboarding": "./Onboarding/nimbus-manifests"\n}\n')),(0,r.kt)("h3",{id:"multiple-repo-files"},"Multiple repo files"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"nimbus-fml")," command line can accept multiple repo-files at a time, resolving ",(0,r.kt)("inlineCode",{parentName:"p"},"@")," links as it goes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-fml generate --repo-file ./app-structure.json --repo-file @mozilla-mobile/dependency-versions/v102.0.json --language swift ./input.fml.yaml output-dir\n")))}u.isMDXComponent=!0}}]);