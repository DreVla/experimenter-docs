(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[5997],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),s=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||l;return t?i.createElement(f,a(a({ref:n},p),{},{components:t})):i.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6905:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var i=t(2122),r=t(9756),l=(t(7294),t(3905)),a={id:"nimbus-cli-working-with-files",title:"Working with Files",slug:"/nimbus-cli/working-with-files"},o=void 0,c={unversionedId:"deep-dives/mobile/nimbus-cli/nimbus-cli-working-with-files",id:"deep-dives/mobile/nimbus-cli/nimbus-cli-working-with-files",isDocsHomePage:!1,title:"Working with Files",description:"fetch",source:"@site/docs/deep-dives/mobile/nimbus-cli/50-working-with-files.mdx",sourceDirName:"deep-dives/mobile/nimbus-cli",slug:"/nimbus-cli/working-with-files",permalink:"/nimbus-cli/working-with-files",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/mobile/nimbus-cli/50-working-with-files.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{id:"nimbus-cli-working-with-files",title:"Working with Files",slug:"/nimbus-cli/working-with-files"},sidebar:"sidebar",previous:{title:"Testing Features",permalink:"/nimbus-cli/test-feature"},next:{title:"Working with Logs",permalink:"/nimbus-cli/working-with-logs"}},s=[{value:"<code>fetch</code>",id:"fetch",children:[]},{value:"<code>list</code>",id:"list",children:[]},{value:"<code>enroll</code>",id:"enroll",children:[]},{value:"<code>apply-file</code>",id:"apply-file",children:[]}],p={toc:s};function u(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"fetch"},(0,l.kt)("inlineCode",{parentName:"h2"},"fetch")),(0,l.kt)("p",null,"You can download from a server the current list of all experiments:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer fetch archived.json\n")),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"preview"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"stage")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"stage/preview")," to specify a Remote Settings instance."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer fetch --server preview archived.json\n")),(0,l.kt)("p",null,"Alternatively, you can specify one or more recipes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer \\\n    fetch \\\n    --recipe android-notification-surface-validation \\\n    --recipe preview/android-research-surface-validation \\\n    archived.json\n")),(0,l.kt)("p",null,"This might be useful for attaching to bug reports."),(0,l.kt)("h2",{id:"list"},(0,l.kt)("inlineCode",{parentName:"h2"},"list")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"list")," command takes a ",(0,l.kt)("inlineCode",{parentName:"p"},"--file")," parameter to make working with these files a little easier:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer list --file archived.json\n")),(0,l.kt)("h2",{id:"enroll"},(0,l.kt)("inlineCode",{parentName:"h2"},"enroll")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"enroll")," command takes ",(0,l.kt)("inlineCode",{parentName:"p"},"--file")," parameter, so you can enroll from recipes stored locally:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer \\\n    --file archived.json \\\n    enroll android-research-surface-validation --branch treatment\n")),(0,l.kt)("h2",{id:"apply-file"},(0,l.kt)("inlineCode",{parentName:"h2"},"apply-file")),(0,l.kt)("p",null,"You can also upload the whole file straight to the SDK:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nimbus-cli --app fenix --channel developer \\\n    apply-file archived.json\n")))}u.isMDXComponent=!0}}]);