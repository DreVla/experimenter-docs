(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[4597],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return d}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),p=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=p(e.components);return i.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),f=p(t),d=r,u=f["".concat(c,".").concat(d)]||f[d]||s[d]||a;return t?i.createElement(u,l(l({ref:n},m),{},{components:t})):i.createElement(u,l({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=f;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=t[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},426:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return p},default:function(){return s}});var i=t(2122),r=t(9756),a=(t(7294),t(3905)),l={id:"fml-cli",title:"Nimbus FML command line interface",slug:"/fml-cli"},o="Commands",c={unversionedId:"deep-dives/specifications/fml-cli",id:"deep-dives/specifications/fml-cli",isDocsHomePage:!1,title:"Nimbus FML command line interface",description:"Generating code for an mobile application",source:"@site/docs/deep-dives/specifications/fml-cli.mdx",sourceDirName:"deep-dives/specifications",slug:"/fml-cli",permalink:"/fml-cli",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/specifications/fml-cli.mdx",tags:[],version:"current",frontMatter:{id:"fml-cli",title:"Nimbus FML command line interface",slug:"/fml-cli"},sidebar:"sidebar",previous:{title:"Proposed changes for Feature Manifest Language",permalink:"/fm-unimplemented-spec"},next:{title:"Feature Manifest Language Front-end Format As YAML",permalink:"/fml-front-end-format"}},p=[{value:"Generating code for an mobile application",id:"generating-code-for-an-mobile-application",children:[{value:"Adding <code>repo-file</code>s",id:"adding-repo-files",children:[]},{value:"Caching remote files",id:"caching-remote-files",children:[]}]},{value:"Generating a manifest file for experimenter",id:"generating-a-manifest-file-for-experimenter",children:[]}],m={toc:p};function s(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"commands"},"Commands"),(0,a.kt)("h2",{id:"generating-code-for-an-mobile-application"},"Generating code for an mobile application"),(0,a.kt)("p",null,"The simplest invocation is in this form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --channel <CHANNEL> <INPUT> <OUTPUT>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LANGUAGE")," can be ",(0,a.kt)("inlineCode",{parentName:"li"},"kotlin")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"swift"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CHANNEL")," is one of the channels specified in the FML file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"INPUT")," may be a local file or directory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OUTPUT")," should be a local file or directory.")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"INPUT")," is a directory, it is recursively searches for any files with names ending in ",(0,a.kt)("inlineCode",{parentName:"p"},".fml.yaml"),"."),(0,a.kt)("p",null,"This command should be called at build time of components and the build time of the application."),(0,a.kt)("h3",{id:"adding-repo-files"},"Adding ",(0,a.kt)("inlineCode",{parentName:"h3"},"repo-file"),"s"),(0,a.kt)("p",null,"Adding ",(0,a.kt)("a",{parentName:"p",href:"fml-paths"},"repo files")," can be done with one or more ",(0,a.kt)("inlineCode",{parentName:"p"},"--repo-file")," argument."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --repo-file ./app-structure.json <INPUT> <OUTPUT>\n")),(0,a.kt)("h3",{id:"caching-remote-files"},"Caching remote files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --channel CHANNEL --cache-dir ./build/cache-dir <INPUT> <OUTPUT>\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/fml-imports-and-includes"},"For ",(0,a.kt)("inlineCode",{parentName:"a"},"include")," and ",(0,a.kt)("inlineCode",{parentName:"a"},"import")," directives in the FML"),", a remote file may be referenced. The cache directory is a local cache of these remote files."),(0,a.kt)("h2",{id:"generating-a-manifest-file-for-experimenter"},"Generating a manifest file for experimenter"),(0,a.kt)("p",null,"The reason to use a custom manifest format a language specific JSON serialization library is to do with keeping the code in sync with the experimenter web server."),(0,a.kt)("p",null,"For legacy reasons, this is a different format of yaml file, which should be checked in to version control and is periodically pulled in by experimenter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"% nimbus-fml generate-experimenter <INPUT> <OUTPUT>\n")),(0,a.kt)("p",null,"This should only be called at the application level, with the one main fml file as an input."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--cache-dir")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"--repo-file")," arguments are also supported."))}s.isMDXComponent=!0}}]);