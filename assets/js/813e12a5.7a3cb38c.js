(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[7467],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),f=l,h=m["".concat(i,".").concat(f)]||m[f]||p[f]||o;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:l},t)}},5064:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(7294),l=n(9443);var o=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},r=n(6010),s="tabItem_1uMI",i="tabItemActive_2DSg";var u=function(e){var t,n=e.lazy,l=e.block,u=e.defaultValue,c=e.values,p=e.groupId,m=e.className,f=a.Children.toArray(e.children),h=null!=c?c:f.map((function(e){return{value:e.props.value,label:e.props.label}})),d=null!=u?u:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value,g=o(),k=g.tabGroupChoices,w=g.setTabGroupChoices,b=(0,a.useState)(d),v=b[0],y=b[1],N=[];if(null!=p){var x=k[p];null!=x&&x!==v&&h.some((function(e){return e.value===x}))&&y(x)}var T=function(e){var t=e.currentTarget,n=N.indexOf(t),a=h[n].value;y(a),null!=p&&(w(p,a),setTimeout((function(){var e,n,a,l,o,r,s,u;(e=t.getBoundingClientRect(),n=e.top,a=e.left,l=e.bottom,o=e.right,r=window,s=r.innerHeight,u=r.innerWidth,n>=0&&o<=u&&l<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(i),setTimeout((function(){return t.classList.remove(i)}),2e3))}),150))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case"ArrowLeft":var l=N.indexOf(e.target)-1;n=N[l]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},m)},h.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,r.Z)("tabs__item",s,{"tabs__item--active":v===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:O,onFocus:T,onClick:T},null!=n?n:t)}))),n?(0,a.cloneElement)(f.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},9443:function(e,t,n){"use strict";var a=(0,n(7294).createContext)(void 0);t.Z=a},6092:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var a=n(2122),l=n(9756),o=(n(7294),n(3905)),r=n(5064),s=n(8215),i={id:"growable-collections",title:"Managing collections not known before release",slug:"/cookbook/fml/growable-collections"},u=void 0,c={unversionedId:"cookbook/fml/growable-collections",id:"cookbook/fml/growable-collections",isDocsHomePage:!1,title:"Managing collections not known before release",description:"Problem",source:"@site/docs/cookbook/fml/growable-collections.mdx",sourceDirName:"cookbook/fml",slug:"/cookbook/fml/growable-collections",permalink:"/cookbook/fml/growable-collections",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/cookbook/fml/growable-collections.mdx",tags:[],version:"current",frontMatter:{id:"growable-collections",title:"Managing collections not known before release",slug:"/cookbook/fml/growable-collections"}},p=[{value:"Problem",id:"problem",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Discussion",id:"discussion",children:[{value:"Exposure events",id:"exposure-events",children:[]},{value:"Local development",id:"local-development",children:[]}]}],m={toc:p};function f(e){var t=e.components,n=(0,l.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"problem"},"Problem"),(0,o.kt)("p",null,"You want to configure a collection of things of the same type, but the configuration isn't known at build time."),(0,o.kt)("p",null,"For example,"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a collection of messages, or"),(0,o.kt)("li",{parentName:"ul"},"a collection of wallpapers.")),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("p",null,"Use a type of ",(0,o.kt)("inlineCode",{parentName:"p"},"Map<String, T>"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nchannels:\n  - debug\n  - release\nfeatures:\n  theming-feature:\n    description: Configuration for theming feature.\n    variables:\n      asset-urls:\n        description: A collection of downloadable assets\n        type: Map<String, String>\n        default: {}\n  defaults:\n    - channel: debug\n      value:\n        assets-urls:\n          kittens: https://placekitten.com/600/900\n          bill-murray: https://www.fillmurray.com/600/900\n          flickr: https://loremflickr.com/600/900\n    - channel: release\n      value:\n        assets-urls:\n          default-theme: https://www.mozilla.com/assets/wp-default/600/900\n\n")),(0,o.kt)("p",null,"The collection of URLs is available in code as:"),(0,o.kt)(r.Z,{defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"swift",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"let themingConfig = MyNimbus.features.themingFeature.value()\nlet assetMap: [String: String] = themingConfig.assetUrls\n\n// A list of URLs\nlet urls = assetMap.values().compactMap { URL(string: $0 )}\n"))),(0,o.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"val themingConfig = MyNimbus.features.themingFeature.value()\nval assetMap: Map<String, String> = themingConfig.assetUrls\n\n// A list of URLs\nval url = assetMap.values().mapNotNull { URL(it) }\n")))),(0,o.kt)("h2",{id:"discussion"},"Discussion"),(0,o.kt)("p",null,"The feature manifest defines the shape i.e. the types, of the complete configuration for a feature. It also defines a default configuration which the app uses if there are no experiments running."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"      asset-urls:\n        description: A collection of downloadable assets\n        type: Map<String, String>\n        default: {}\n")),(0,o.kt)("p",null,"This might be represented as JSON:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {}\n}\n')),(0,o.kt)("p",null,"The default configuration of a feature can be changed by experiments, rollouts and within the manifest itself."),(0,o.kt)("p",null,"However, these changes are performed by ",(0,o.kt)("em",{parentName:"p"},"patching")," the default config, rather than by ",(0,o.kt)("em",{parentName:"p"},"replacement"),"."),(0,o.kt)("p",null,"The algorithm for patching is given by the ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7396"},"JSON Merge Patch RFC7396"),", which is approximately: JSON objects get merged,\nand scalars and lists are replaced, and ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," causes a deletion."),(0,o.kt)("p",null,"We'll continue our example to illustrate this in more detail:"),(0,o.kt)("p",null,"In the release population, the default JSON for the the ",(0,o.kt)("inlineCode",{parentName:"p"},"theming-feature")," patched on to the minimal configuration above:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {\n        "default-theme": "https://www.mozilla.com/assets/wp-default/600/900"\n    }\n}\n')),(0,o.kt)("p",null,"This came from a channel specific default within the manifest itself."),(0,o.kt)("p",null,"Some of the release population may be under experiment. An experiment branch sets up the feature thus:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {\n        "protocol-theme": "https://www.mozilla.com/assets/wp-protocol/600/900"\n    }\n}\n')),(0,o.kt)("p",null,"At the same time, another experiment may have just terminated, and a branch declared the winner. The experiment owner has decided to promote this branch to the whole population as a rollout."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {\n        "ufi-theme": "https://www.mozilla.com/assets/wp-ufi/600/900"\n    }\n}\n')),(0,o.kt)("p",null,"So the final configuration that the app receives for the feature is a merging of all three:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {\n        "default-theme": "https://www.mozilla.com/assets/wp-default/600/900",\n        "protocol-theme": "https://www.mozilla.com/assets/wp-protocol/600/900",\n        "ufi-theme": "https://www.mozilla.com/assets/wp-ufi/600/900"\n    }\n}\n')),(0,o.kt)("p",null,"As long as the keys are unique, the collection will grow each time a rollout or experiment affects the feature."),(0,o.kt)("p",null,"Finally, successful rollouts are likely going to be persisted: now we have learned a particular asset performs well, we should make it part of the next release."),(0,o.kt)("p",null,"On the next release, rollouts of successful assets would likely be folded back into the manifest itself, and so the manifest becomes the repository of successful assets."),(0,o.kt)("p",null,"As time goes by, we have a growing collection of asset-urls, without needing to change the code at all."),(0,o.kt)("p",null,'This is a very powerful pattern which is used in multiple places, so we\'ll name this pattern "Growable Collections".'),(0,o.kt)("h3",{id:"exposure-events"},"Exposure events"),(0,o.kt)("p",null,"Features with a growable collection of things may need to give some care about exposure events."),(0,o.kt)("p",null,"Recall: exposure events should be sent when the user is exposed to the treatment."),(0,o.kt)("p",null,"If we wish to experiment with a particular asset, the application feature should detect which asset being shown, and then only\nrecord an exposure only when that asset is being shown. We can do this by adding an extra variable into the feature."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"      asset-under-experiment:\n        description: The key into the asset urls map of the asset we wish to test.\n        type: Option<String>\n        default: null\n")),(0,o.kt)("p",null,"This allows us to be specific in the experiment payload that the ",(0,o.kt)("inlineCode",{parentName:"p"},"protocol-theme")," is the asset we wish to experiment with."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "asset-urls": {\n        "protocol-theme": "https://www.mozilla.com/assets/wp-protocol/600/900"\n    },\n    "asset-under-experiment": "protocol-theme"\n}\n')),(0,o.kt)("p",null,"In the application code, we check to see if the asset being displayed is the one we're interested in, and only then record an exposure."),(0,o.kt)(r.Z,{defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"swift",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"let config = MyNimbus.features.themingFeature.value()\nlet key = selectKey(from: themingFeature.assetMap)\n\nif key == config.assetUnderExperiment {\n    MyNimbus.features.themingFeature.recordExposure()\n}\n\ndisplayAsset(url: config.assetMap[key])\n"))),(0,o.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"val config = MyNimbus.features.themingFeature.value()\nval key = selectKey(from: themingFeature.assetMap)\n\nif (key == config.assetUnderExperiment) {\n    MyNimbus.features.themingFeature.recordExposure()\n}\n\ndisplayAsset(config.assetMap[key])\n")))),(0,o.kt)("h3",{id:"local-development"},"Local development"),(0,o.kt)("p",null,"Channel specific ",(0,o.kt)("inlineCode",{parentName:"p"},"defaults")," allow us to specify a list of assets prepopulated with placeholders. The defaults for the\n",(0,o.kt)("inlineCode",{parentName:"p"},"debug")," channel for this feature are derived directly from manifest."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "assets-urls": {\n        "kittens": "https://placekitten.com/600/900",\n        "bill-murray": "https://www.fillmurray.com/600/900",\n        "flickr": "https://loremflickr.com/600/900"\n    }\n}\n')),(0,o.kt)("p",null,"Local development can then proceed with these placeholders, while other channels do not."))}f.isMDXComponent=!0},6010:function(e,t,n){"use strict";function a(e){var t,n,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(l&&(l+=" "),l+=n);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}function l(){for(var e,t,n=0,l="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(l&&(l+=" "),l+=t);return l}n.d(t,{Z:function(){return l}})}}]);